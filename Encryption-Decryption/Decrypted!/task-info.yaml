type: edu
custom_name: stage3
files:
- name: test/EncryptDecryptTest.java
  visible: false
  text: |
    import encryptdecrypt.Main;
    import org.hyperskill.hstest.v6.stage.BaseStageTest;
    import org.hyperskill.hstest.v6.testcase.PredefinedIOTestCase;

    import java.util.List;

    public class EncryptDecryptTest extends BaseStageTest {
        public EncryptDecryptTest() throws Exception {
            super(Main.class);
        }

        @Override
        public List<PredefinedIOTestCase> generate() {
            return List.of(
                new PredefinedIOTestCase(
                    "enc\n" +
                        "Welcome to hyperskill!\n" +
                        "5",
                    "\\jqhtrj%yt%m~ujwxpnqq&"),
                new PredefinedIOTestCase(
                    "enc\n" +
                        "Hello\n" +
                        "0",
                    "Hello"),
                new PredefinedIOTestCase(
                    "enc\n" +
                        "012345678\n" +
                        "1",
                    "123456789"),
                new PredefinedIOTestCase(
                    "dec\n" +
                        "\\jqhtrj%yt%m~ujwxpnqq&\n" +
                        "5",
                    "Welcome to hyperskill!"),
                new PredefinedIOTestCase(
                    "dec\n" +
                        "Hello\n" +
                        "0",
                    "Hello"),
                new PredefinedIOTestCase(
                    "dec\n" +
                        "222233334444\n" +
                        "1",
                    "111122223333")
            );
        }
    }
  learner_created: false
- name: src/encryptdecrypt/Main.java
  visible: true
  text: |-
    package encryptdecrypt;

    import java.util.Locale;
    import java.util.Scanner;

    public class Main {
        public static void main(String[] args) {
            Scanner scanner = new Scanner(System.in);

            String message = scanner.nextLine();
            int key = scanner.nextInt();

            message = message.toLowerCase(Locale.ENGLISH);

            String alphabet = "abcdefghijklmnopqrstuvwxyz";
            int diff = key - (key / alphabet.length() * alphabet.length());
            int neededLetterIndex;

            for (int i = 0; i < message.length(); i++){
                if ((int) message.charAt(i) < 97 || (int) message.charAt(i) > 122){
                    System.out.print(message.charAt(i));
                    continue;
                }

                neededLetterIndex = diff + alphabet.indexOf(message.charAt(i));

                if (neededLetterIndex < alphabet.length()){
                    System.out.print(alphabet.charAt(neededLetterIndex));
                } else {
                    System.out.print(alphabet.charAt(neededLetterIndex - alphabet.length()));
                }
            }
        }
    }
  learner_created: false
- name: src/encryptdecrypt/MainSample.java
  visible: true
  text: |-
    package encryptdecrypt;

    import java.util.Scanner;

    public class MainSample {
        public static void main(String[] args) {
            Scanner scanner = new Scanner(System.in);
            char[] chars = scanner.nextLine().toCharArray();
            int shift = scanner.nextInt();

            char a = 'a';
            char z = 'z';
            int size = 26;

            for (char item : chars) {
                if (item >= a && item <= z) {
                    char shiftItem = (char) (((item - a + shift) % size) + a);
                    System.out.print(shiftItem);
                } else {
                    System.out.print(item);
                }
            }
        }
    }
  learner_created: false
feedback_link: https://hyperskill.org/projects/46/stages/247/implement
status: Solved
record: 3
